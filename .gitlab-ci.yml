# Build OS = Ubuntu LTS (latest)
image: mxklb/docker-qt5-deb

stages:
- tests
- build
- deploy
- release

before_script:
- apt-get update -y
- apt-get install -y wget xvfb chrpath libfuse-dev

## 1 Debug builds (++ test)
.debug_build_with_tests:
  stage: tests
  except:
    - tags
  script:
    - qmake cuteproject.pro -r CONFIG+=debug
    - make

debug_tests:
  extends: .debug_build_with_tests

# Debug build (++ test coverage)
debug_tests_coverage:
  extends: .debug_build_with_tests
  script:
    - qmake cuteproject.pro -r CONFIG+=debug
    - make
    - gcovr -r . -e '.*extern.*' -e '.*moc_.*'
    - chmod +x lcov.sh && ./lcov.sh
    - mv coverage/*.pdf .
    - mv coverage/*.tar.gz .
  artifacts:
    paths:
      - coverage.pdf
      - coverage.tar.gz
    name: "test_coverage"

# Test latest Ubuntu (rolling)
debug_tests_rolling:
  extends: .debug_build_with_tests
  image: mxklb/docker-qt5-deb:rolling
  allow_failure: true

# Test bleeding Ubuntu (devel)
debug_tests_devel:
  extends: .debug_build_with_tests
  image: mxklb/docker-qt5-deb:devel
  allow_failure: true

## 2 Release build (++ tests)
release_tests:
  stage: tests
  script:
    - qmake cuteproject.pro -r CONFIG+=release
    - make

## 3 Release build (no tests)
release_build:
  stage: build
  script:
    - echo "catchTests=false" > globals.pri
    - qmake cuteproject.pro -r CONFIG+=release
    - make

## 4 Build & Deploy debian packages
.build_debian:
  stage: deploy
  artifacts:
    paths:
      - cuteproject-*.deb

.build_debian_xenial:
  extends: .build_debian
  image: mxklb/docker-qt5-deb:xenial
  script:
    - chmod +x pkgs/version.sh
    - chmod +x pkgs/debian.sh && pkgs/debian.sh
    - mv pkgs/deb/cuteproject-*.deb .
  artifacts:
    name: "cuteproject-xenial_amd64"

.build_debian_trusty:
  extends: .build_debian
  image: mxklb/docker-qt5-deb:trusty
  script:
    - export USER=$GITLAB_USER_LOGIN
    - chmod +x pkgs/version.sh
    - chmod +x pkgs/debian.sh && pkgs/debian.sh
    - mv pkgs/deb/cuteproject-*.deb .
  artifacts:
    name: "cuteproject-trusty_amd64"

# Continuous deployments
debian_trusty_latest:
  extends: .build_debian_trusty

debian_xenial_latest:
  extends: .build_debian_xenial

# Release deployments
debian_trusty_stable:
  extends: .build_debian_trusty
  stage: release
  only:
    - tags
  except:
    - /^(?!master).+@/

debian_xenial_stable:
  extends: .build_debian_xenial
  stage: release
  only:
    - tags
  except:
    - /^(?!master).+@/

## 5 Build & Deploy .AppImage's
.build_appimage:
  stage: deploy
  image: mxklb/docker-qt5-deb:trusty
  script:
    - echo "catchTests=false" > globals.pri
    - qmake cuteproject.pro -r CONFIG+=release
    - make
    - chmod +x pkgs/version.sh
    - chmod +x pkgs/appimage.sh && pkgs/appimage.sh
    - mv pkgs/cuteproject-* .
  artifacts:
    paths:
      - cuteproject-*
    name: "cuteproject-x86_64"

# Continuous deployment
appimage_latest:
  extends: .build_appimage

# Release deployment
appimage_stable:
  extends: .build_appimage
  stage: release
  only:
    - tags
  except:
    - /^(?!master).+@/
